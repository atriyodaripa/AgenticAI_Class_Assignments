import streamlit as st
import requests
import datetime

# from exception.exceptions import TradingBotException
import sys

BASE_URL = "http://localhost:8000"  # Backend endpoint

st.set_page_config(
    page_title="üåç Travel Planner Agentic Application",
    page_icon="üåç",
    layout="wide",
)

st.title("üåç Travel Planner Agentic Application")

# Initialize chat history
if "messages" not in st.session_state:
    st.session_state.messages = []

# Display chat history
st.header("How can I help you in planning a trip? Let me know where do you want to visit.")

# Chat input box at bottom
with st.form(key="query_form"):
    user_input = st.text_area("Where do you want to go in coming days? Tell me what information you want in your trip planning(e.g., destination, dates, budget, interests, travelers):", height=150, placeholder="e.g. Plan a trip to Goa for 5 days")
    submit_button = st.form_submit_button("Send")

if submit_button and user_input.strip():
    try:
        # # Show user message
        # Show thinking spinner while backend processes
        # st.info("Generating your personalized trip plan. This might take a moment as I gather real-time data...")
        with st.spinner("Thinking and gathering data... This can take few minutes..."):
            payload = {"question": user_input}
            response = requests.post(f"{BASE_URL}/query", json=payload)

        if response.status_code == 200:
        # if "response" == "response":
            answer = response.json().get("answer", "No answer returned.")
            st.subheader("Your Complete Trip Plan:")
            markdown_header = f'''# üåç AI Generated Travel Plan'''
            generation_details = f'''
            ## **Generated:** {datetime.datetime.now().strftime('%Y-%m-%d at %H:%M')}  
            **Created by:** Atriyo's Travel Agent
            '''
            markdown_content = answer
            markdown_footer = '''*This travel plan was generated by AI. Please verify all information, especially prices, operating hours, and travel requirements before your trip.*
            '''
            st.markdown(markdown_header)
            st.markdown(generation_details)
            st.markdown(markdown_content)
            st.markdown(markdown_footer)
        else:
            st.error("‚ùå Bot failed to respond: " + response.text)
            # st.error("‚ùå Bot failed to respond: " + "response.text")

    except Exception as e:
        raise f"The response failed due to {e}"